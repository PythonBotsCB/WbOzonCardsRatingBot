import time

from scripts import *
from aiogram import Bot, Dispatcher, types, executor

TOKEN = "6475140627:AAEN1UhefpAdDDF5jzjdJpHiusWObu09YU0"
bot = Bot(token=TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)

WB = WbCards()

@dp.message_handler(commands='start')
async def start(message:types.Message):
    await bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –≠—Ç–æ—Ç –±–æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –ª—É—á—à–∏–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ –û–∑–æ–Ω–µ –∏ –í–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑,'
                                            ' –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±—É—é –≤–µ—â—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –Ω—É–∂–¥–∞–µ—Ç–µ—Å—å –∏ –æ–Ω'
                                            ' –≤–∞–º –ø–æ–∫–∞–∂–µ—Ç —Ç–æ, —á—Ç–æ –≤—ã –∏—â–µ—Ç–µ')

@dp.message_handler()
async def searchInfo(message:types.Message):
    await bot.send_message(message.chat.id, '–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–∏—Ç–µ...')

    count = 0
    try:
        cards = WB.UploadInfo(message.text)
        for id, info in cards.items():
            text = f'''–ù–∞–∑–≤–∞–Ω–∏–µ: {info['name']}\n–†–µ–π—Ç–∏–Ω–≥: {info['rate']}‚≠êÔ∏èÔ∏è\n<b>–°—Ç–æ–∏–º–æ—Å—Ç—å: {info['price']}</b>\n–°—Å—ã–ª–∫–∞: {info['link']}'''
            await bot.send_message(message.chat.id, text)
            time.sleep(0.75)
            count += 1
            if count == 10:
                break
        if len(cards) == 0:
            await bot.send_message(message.chat.id, '–ù–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É')
    except Exception as ex:
        await bot.send_message(message.chat.id, '–ó–∞–ø—Ä–æ—Å –Ω–µ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –ø–æ-–¥—Ä—É–≥–æ–º—É')

def main():
    executor.start_polling(dp)

if __name__ == '__main__':
    main()